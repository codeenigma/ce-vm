---

- name: Copy project vhost in place.
  template:
    src: vhosts.j2
    dest: "/etc/nginx/sites-enabled/{{ project_name }}.conf"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Copy project type-specific configuration in place.  
  template:
    src: "{{ project_type }}.j2"
    dest: "/etc/nginx/conf.d/{{ project_type }}"
    owner: root
    group: root
    mode: 0644
    force: yes

- name: Ensure default nginx catch-all is not present
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent

- name: Copy landing page section.
  template:
    src: "section.html.j2"
    dest: "{{ ce_vm_webroot }}/includes/nginx.html"
    force: yes

- name: Raise server_names_hash_bucket_size to cope with long names.
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: 'server_names_hash_bucket_size'
    line: 'server_names_hash_bucket_size 256;'

- name: Copy startup script in place.
  template:
    src: startup.sh.j2
    dest: "/opt/run-parts/nginx"
    owner: root
    group: root
    mode: 0555
    force: yes

- name: Ensure Nginx is stopped.
  service:
    name: nginx
    state: stopped

- name: Update apt cache.
  apt:
    update_cache: yes
  when: ssl_handling == "letsencrypt"

- name: Ensure Certbot is installed.
  apt:
    pkg: certbot
    state: present
  when: ssl_handling == "letsencrypt"

- name: Check if we have a certificate.
  stat:
    path: '/etc/letsencrypt/live/{{ service_hostname }}/fullchain.pem'
    register: letsencrypt_cert

- name: Register certificate if needed.
  cmd: "/usr/bin/certbot certonly -n --cert-name {{ service_hostname }} --standalone --preferred-challenges http -d {{ service_hostname }} --agree-tos -m {{ ssl_letsencrypt_mail }}"