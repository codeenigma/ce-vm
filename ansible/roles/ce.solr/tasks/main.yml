---
  
- name: Install Tomcat.
  apt: "name=tomcat7 state=present"

- name: Install Solr-Tomcat.
  apt: "name=solr-tomcat state=present"

- name: Create Solr download shared cache dir if needed.
  file:
    path: '{{ shared_cache_dir }}/solr'
    owner: 'vagrant'
    group: 'root'
    state: directory

- name: Download Solr
  get_url:
    url: "http://archive.apache.org/dist/lucene/solr/{{ solr_version }}/solr-{{ solr_version }}.zip"
    dest: "{{ shared_cache_dir }}/solr/solr-{{ solr_version }}.zip"

- name: Check if Solr is already installed.
  stat:
    path: "/opt/solr-{{ solr_version }}"
  register: solr_exists

- name: Extract Solr.
  unarchive:
    src: "{{ shared_cache_dir }}/solr/solr-{{ solr_version }}.zip"
    dest: "/opt/"
    remote_src: yes
  when: not solr_exists.stat.exists

- name: Install Catalina configuration.
  template:
    src: catalina.solr.xml.j2
    dest: "/etc/tomcat7/Catalina/localhost/solr.xml"
    
- name: Copy log4j library.
  copy:
    src: "/opt/solr-{{ solr_version }}/example/resources/log4j.properties"
    dest: /usr/share/tomcat7/lib/

- name: Copy additional libraries.
  copy:
    src: "{{ item }}"
    dest: "/usr/share/tomcat7/lib/"
  with_fileglob:
    - "/opt/solr-{{ solr_version }}/example/lib/ext/*.jar"

- name: Create cores directory if needed.
  file:
    path: '/opt/solr-{{ solr_version }}/multicore'
    state: directory

- name: Copy multicore zoo.cfg file.
  template:
    src: "multicore.zoo.cfg.j2"
    dest: "/opt/solr-{{ solr_version }}/multicore/zoo.cfg"
  
- name: Copy multicore solr.xml file.
  template:
    src: "multicore.solr.xml.j2"
    dest: "/opt/solr-{{ solr_version }}/multicore/solr.xml"

- name: Create cores.
  file:
    path: '/opt/solr-{{ solr_version }}/multicore/{{ item }}/conf'
    state: directory
  with_items: "{{ solr_cores }}"
  
- name: Use default configuration if no path given.
  synchronize:
    src: "/opt/solr-{{ solr_version }}/example/multicore/core0/conf"
    dest: "/opt/solr-{{ solr_version }}/multicore/{{ item }}/"
    delete: true
  with_items: "{{ solr_cores }}"
  when: solr_conf_path == ""

- name: Match cores names for default config.
  replace:
    path: "/opt/solr-{{ solr_version }}/multicore/{{ item }}/conf/schema.xml"
    regexp: 'core0'
    replace: "{{ item }}"
  with_items: "{{ solr_cores }}"
  when: solr_conf_path == ""

- name: Match cores names for default config.
  replace:
    path: "/opt/solr-{{ solr_version }}/multicore/{{ item }}/conf/solrconfig.xml"
    regexp: 'core0'
    replace: "{{ item }}"
  with_items: "{{ solr_cores }}"
  when: solr_conf_path == ""
  
- name: Use project configuration if path is given.
  synchronize:
    src: "{{ project_dir }}/{{ solr_conf_path }}/{{ item }}/"
    dest: "/opt/solr-{{ solr_version }}/multicore/{{ item }}/conf"
    delete: true
  with_items: "{{ solr_cores }}"
  when: solr_conf_path != ""

- name: Ensure Solr directory is writable by Tomcat.
  file:
    path: '/opt/solr-{{ solr_version }}/multicore'
    owner: tomcat7
    group: tomcat7
    state: directory
    recurse: true

- name: Copy landing page section.
  template:
    src: "section.html.j2"
    dest: "{{ ce_vm_webroot }}/includes/solr.html"
    force: yes

- name: Copy startup script in place.
  template:
    src: startup.sh.j2
    dest: "/opt/run-parts/tomcat"
    owner: root
    group: root
    mode: 0555
    force: yes