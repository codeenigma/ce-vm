---
# Install mysql

# Add Percona repo if needed.
- name: Add repository key for Percona repository.
  apt_key: keyserver=keyserver.ubuntu.com id=8507EFA5 state=present
  when: mysql_engine == "percona-server"
  
- name: Add repository for Percona.
  apt_repository: repo='deb https://repo.percona.com/apt jessie main' state=present
  when: mysql_engine == "percona-server"

- name: Add source repository for Percona.
  apt_repository: repo='deb-src https://repo.percona.com/apt jessie main' state=present
  when: mysql_engine == "percona-server"

- name: Add repository key for MySQL repository.
  apt_key: keyserver=pgp.mit.edu id=A4A9406876FCBD3C456770C88C718D3B5072E1F5 state=present
  when: mysql_engine == "mysql"

- name: Add repository for MySQL.
  apt_repository: repo='deb http://repo.mysql.com/apt/debian/ jessie mysql-5.7' state=present
  when: mysql_engine == "mysql"

- name: Add source repository for MySQL.
  apt_repository: repo='deb-src http://repo.mysql.com/apt/debian/ jessie mysql-5.7' state=present
  when: mysql_engine == "mysql"


- name: Pin Percona packages.
  template:
    src: percona.pref.j2
    dest: "/etc/apt/preferences.d/percona.pref"
    owner: root
    group: root
    mode: 0644
    force: yes
  when: mysql_engine == "percona-server"
  
- name: Pin MySQL packages.
  template:
    src: mysql.pref.j2
    dest: "/etc/apt/preferences.d/mysql.pref"
    owner: root
    group: root
    mode: 0644
    force: yes
  when: mysql_engine == "mysql"
  
- name: Ensure mysql is installed.
  apt:
    pkg: "{{ mysql_engine }}-server"
    state: present

- name: Copy Percona overriding configuration in place.
  template:
    src: percona_dev.cnf.j2
    dest: "/etc/mysql/conf.d/dev.cnf"
    owner: root
    group: root
    mode: 0644
    force: yes
  when: mysql_engine == "percona-server"

- name: Copy MySQL overriding configuration in place.
  template:
    src: mysql_dev.cnf.j2
    dest: "/etc/mysql/mysql.conf.d/zz_dev.cnf"
    owner: root
    group: root
    mode: 0644
    force: yes
  when: mysql_engine == "mysql"
  
- name: Restart mysql.
  service: name=mysql state=restarted enabled=yes

- name: Update MySQL root password.
  shell: >
    mysql -u root -NBe 'GRANT ALL ON *.* TO "root"@"%" IDENTIFIED BY "root" WITH GRANT OPTION;'

- name: create "dev" MySQL user.
  shell: >
    mysql -u root -NBe 'GRANT ALL ON *.* TO "dev"@"%" IDENTIFIED BY "dev";'

- name: Ensure python-mysqldb is installed.
  apt:
    pkg: "python-mysqldb"
    state: present

- name: Create databases for dumps.
  mysql_db: state=present name="{{ item.name }}" target="{{ project_dir }}/{{ item.source }}"
  with_items: "{{ db_dumps }}"
  register: create_db_dumps
  when: db_dumps | length

- name: Import database dumps.
  mysql_db: state=import name="{{ item.item.name }}" target="{{ project_dir }}/{{ item.item.source }}"
  with_items: "{{ create_db_dumps.results }}"
  when: (create_db_dumps.results | length) and (item.changed == True) and (item.item.source | length)

- name: Copy startup script in place.
  template:
    src: startup.sh.j2
    dest: "/opt/run-parts/mysql"
    owner: root
    group: root
    mode: 0555
    force: yes
